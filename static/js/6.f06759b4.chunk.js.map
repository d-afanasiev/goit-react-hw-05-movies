{"version":3,"sources":["services/tmdb-api.js","styles/MovieDetailsPage.module.css","views/MovieDetailsPage.jsx"],"names":["API_KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","searchBooks","nameFilm","fetchMovieById","movieId","fetchActorsById","fetchReviewsById","module","exports","Reviews","lazy","Cast","MovieDetailsPage","useState","movie","setMovie","genres","setGenres","useParams","useRouteMatch","useEffect","then","data","catch","error","console","log","className","css","wrapperMovie","imageMovie","src","poster_path","alt","title","release_date","getYear","parseISO","Math","round","popularity","overview","map","genre","name","to","information","fallback","type","color","height","width","timeout","path"],"mappings":"gVAAMA,EAAU,mCACVC,EAAQ,+B,SAECC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,oF,sBAOO,SAASC,IACd,OAAOX,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASc,EAAYC,GAC1B,OAAOb,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,wCACgDe,IAIxE,SAASC,EAAeC,GAC7B,OAAOf,EAAuB,GAAD,OACxBD,EADwB,kBACNgB,EADM,oBACajB,EADb,oBAKxB,SAASkB,EAAgBD,GAC9B,OAAOf,EAAuB,GAAD,OACxBD,EADwB,kBACNgB,EADM,4BACqBjB,EADrB,oBAKxB,SAASmB,EAAiBF,GAC/B,OAAOf,EAAuB,GAAD,OACxBD,EADwB,kBACNgB,EADM,4BACqBjB,EADrB,6B,mBClC/BoB,EAAOC,QAAU,CAAC,aAAe,uCAAuC,WAAa,qCAAqC,YAAc,wC,iLCSlIC,EAAUC,gBAAK,kBAAM,gCACrBC,EAAOD,gBAAK,kBAAM,gCAET,SAASE,IAAoB,IAAD,EACfC,mBAAS,MADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAEbF,mBAAS,IAFI,mBAElCG,EAFkC,KAE1BC,EAF0B,KAGnCb,EAAYc,cAAZd,QACEb,EAAQ4B,cAAR5B,IAER6B,qBAAU,WACRjB,YAAeC,GACZiB,MAAK,SAACC,GACLP,EAASO,GACTL,EAAUK,EAAKN,WAEhBO,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACpB,IAUJ,OACE,mCACGU,GACC,qCACE,sBAAKa,UAAWC,IAAIC,aAApB,UACE,qBAAKF,UAAWC,IAAIE,WAApB,SACE,qBAAKC,IAbXjB,EAAMkB,YACF,mCAAN,OAA0ClB,EAAMkB,aAEzC,wHAU0BC,IAAKnB,EAAMoB,UAEtC,gCACE,+BACGpB,EAAMoB,MACNpB,EAAMqB,cAAN,WACKC,YAAQC,YAASvB,EAAMqB,eAD5B,QAGH,kDAAqBG,KAAKC,MAAMzB,EAAM0B,eACtC,0CACA,4BAAI1B,EAAM2B,WACV,wCACA,4BAAIzB,EAAO0B,KAAI,SAACC,GAAD,gBAAcA,EAAMC,KAApB,gBAGnB,gCACE,wDACA,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKtD,EAAL,SAAR,oBAEF,6BACE,cAAC,IAAD,CAAMsD,GAAE,UAAKtD,EAAL,YAAR,0BAGJ,qBAAKoC,UAAWC,IAAIkB,YAApB,SACE,cAAC,WAAD,CACEC,SACE,cAAC,IAAD,CACEC,KAAK,UACLC,MAAM,kBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAPf,SAWE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,UAAK9D,EAAL,SAAX,SACE,cAACoB,EAAD,CAAMP,QAASA,MAEjB,cAAC,IAAD,CAAOiD,KAAI,UAAK9D,EAAL,YAAX,SACE,cAACkB,EAAD,CAASL,QAASA","file":"static/js/6.f06759b4.chunk.js","sourcesContent":["const API_KEY = \"4e286c2ceeb7113ef3a7d57d0bdb7157\";\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function searchBooks(nameFilm) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${nameFilm}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchActorsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviewsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperMovie\":\"MovieDetailsPage_wrapperMovie__2jltC\",\"imageMovie\":\"MovieDetailsPage_imageMovie__26Mo_\",\"information\":\"MovieDetailsPage_information__2l2Pt\"};","import { Route, Switch, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieById } from \"../services/tmdb-api\";\nimport { getYear, parseISO } from \"date-fns\";\nimport { lazy, Suspense } from \"react\";\nimport Loader from \"react-loader-spinner\";\n// import { Notify, Block } from \"notiflix\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport css from \"../styles/MovieDetailsPage.module.css\";\n\nconst Reviews = lazy(() => import(\"./Reviews\"));\nconst Cast = lazy(() => import(\"./Cast\"));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const [genres, setGenres] = useState([]);\n  let { movieId } = useParams();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    fetchMovieById(movieId)\n      .then((data) => {\n        setMovie(data);\n        setGenres(data.genres);\n      })\n      .catch((error) => console.log(error));\n  }, [movieId]);\n\n  const renderImage = () => {\n    if (movie.poster_path) {\n      return `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    } else {\n      return \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png\";\n    }\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <div className={css.wrapperMovie}>\n            <div className={css.imageMovie}>\n              <img src={renderImage()} alt={movie.title} />\n            </div>\n            <div>\n              <h1>\n                {movie.title}\n                {movie.release_date &&\n                  `(${getYear(parseISO(movie.release_date))})`}\n              </h1>\n              <p>User Popularity: {Math.round(movie.popularity)}</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map((genre) => `${genre.name} `)}</p>\n            </div>\n          </div>\n          <div>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to={`${url}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`${url}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n            <div className={css.information}>\n              <Suspense\n                fallback={\n                  <Loader\n                    type=\"Circles\"\n                    color=\"rgb(56, 56, 56)\"\n                    height={100}\n                    width={100}\n                    timeout={1000}\n                  />\n                }\n              >\n                <Switch>\n                  <Route path={`${url}/cast`}>\n                    <Cast movieId={movieId}></Cast>\n                  </Route>\n                  <Route path={`${url}/reviews`}>\n                    <Reviews movieId={movieId}></Reviews>\n                  </Route>\n                </Switch>\n              </Suspense>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}