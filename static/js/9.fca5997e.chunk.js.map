{"version":3,"sources":["views/Reviews.jsx"],"names":["Reviews","movieId","useState","reviews","setReviews","console","log","useEffect","fetchReviewsById","then","results","catch","error","length","map","review","author","content","id"],"mappings":"0NAGe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACbC,mBAAS,IADI,mBACpCC,EADoC,KAC3BC,EAD2B,KAY3C,OATAC,QAAQC,IAAIH,GAEZI,qBAAU,WACRC,YAAiBP,GACdQ,MAAK,SAACN,GAAD,OAAaC,EAAWD,EAAQO,YACrCC,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,QAC/B,CAACX,IAIF,mCACsB,IAAnBE,EAAQU,OACP,yEAEA,6BACGV,EAAQW,KAAI,SAACC,GAAD,OACX,+BACE,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFJF,EAAOG","file":"static/js/9.fca5997e.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { fetchReviewsById } from \"../services/tmdb-api\";\r\n\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  console.log(reviews);\r\n\r\n  useEffect(() => {\r\n    fetchReviewsById(movieId)\r\n      .then((reviews) => setReviews(reviews.results))\r\n      .catch((error) => console.log(error));\r\n  }, [movieId]);\r\n\r\n  //   console.log(actors);\r\n  return (\r\n    <>\r\n      {reviews.length === 0 ? (\r\n        <p>We don't have any rewiews for this movie</p>\r\n      ) : (\r\n        <ul>\r\n          {reviews.map((review) => (\r\n            <li key={review.id}>\r\n              <h5>{review.author}</h5>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}