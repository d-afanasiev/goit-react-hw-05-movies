{"version":3,"sources":["views/Reviews.jsx"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchReviewsById","then","results","catch","error","console","log","length","map","review","author","content","id"],"mappings":"0NAGe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACbC,mBAAS,IADI,mBACpCC,EADoC,KAC3BC,EAD2B,KAS3C,OANAC,qBAAU,WACRC,YAAiBL,GACdM,MAAK,SAACJ,GAAD,OAAaC,EAAWD,EAAQK,YACrCC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACT,IAGF,mCACsB,IAAnBE,EAAQU,OACP,yEAEA,6BACGV,EAAQW,KAAI,SAACC,GAAD,OACX,+BACE,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFJF,EAAOG","file":"static/js/9.ff9690e6.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { fetchReviewsById } from \"../services/tmdb-api\";\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsById(movieId)\n      .then((reviews) => setReviews(reviews.results))\n      .catch((error) => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>We don't have any rewiews for this movie</p>\n      ) : (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <h5>{review.author}</h5>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}