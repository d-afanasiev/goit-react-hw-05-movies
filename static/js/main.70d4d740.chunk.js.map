{"version":3,"sources":["components/Navigation/Navigation.module.css","styles/MovieDetailsPage.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/AppBar/AppBar.jsx","services/tmdb-api.js","views/HomePage.jsx","views/MoviesPage.jsx","views/Reviews.jsx","views/Cast.jsx","views/MovieDetailsPage.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","css","container","Navigation","exact","to","link","activeClassName","activeLink","AppBar","header","API_KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","HomePage","useState","movies","setMovies","useEffect","then","data","results","catch","error","Notify","failure","map","movie","id","title","MoviesPage","searchFilms","setSearchFilms","nameFilm","setNameFilm","useRouteMatch","console","log","onSubmit","e","preventDefault","searchBooks","type","autoComplete","autoFocus","placeholder","value","onChange","target","film","Reviews","movieId","reviews","setReviews","fetchReviewsById","review","author","content","Cast","actors","setActors","fetchActorsById","cast","renderImage","actor","profile_path","src","alt","name","width","height","character","MovieDetailsPage","setMovie","genres","setGenres","useParams","Block","circle","cssAnimationDuration","fetchMovieById","finally","remove","wrapperMovie","imageMovie","poster_path","release_date","getYear","parseISO","Math","round","popularity","overview","genre","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d4d740.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB Navigation_link__12o2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperMovie\":\"MovieDetailsPage_wrapperMovie__2jltC\",\"imageMovie\":\"MovieDetailsPage_imageMovie__26Mo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","import css from \"./Container.module.css\";\n\nexport default function Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n","import { NavLink } from \"react-router-dom\";\nimport css from \"./Navigation.module.css\";\n\nexport default function Navigation() {\n  return (\n    <nav>\n      <NavLink\n        exact\n        to=\"/\"\n        className={css.link}\n        activeClassName={css.activeLink}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/movies\"\n        className={css.link}\n        activeClassName={css.activeLink}\n      >\n        Movies\n      </NavLink>\n    </nav>\n  );\n}\n","import Navigation from \"../Navigation/Navigation\";\nimport css from \"./AppBar.module.css\";\n\nexport default function AppBar() {\n  return (\n    <header className={css.header}>\n      <Navigation />\n    </header>\n  );\n}\n","const API_KEY = \"4e286c2ceeb7113ef3a7d57d0bdb7157\";\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function searchBooks(nameFilm) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${nameFilm}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchActorsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviewsById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchMovies } from \"../services/tmdb-api\";\nimport { Notify } from \"notiflix\";\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies()\n      .then((data) => {\n        setMovies(data.results);\n      })\n      .catch((error) => Notify.failure(error));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { searchBooks } from \"../services/tmdb-api\";\nimport { Link } from \"react-router-dom\";\nimport { useRouteMatch } from \"react-router\";\n\nexport default function MoviesPage() {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [nameFilm, setNameFilm] = useState(\"\");\n\n  const { url } = useRouteMatch();\n\n  console.log(url);\n\n  const handleChange = (e) => {\n    setNameFilm(e.target.value);\n  };\n\n  const handleSubmitFilm = (e) => {\n    e.preventDefault();\n    searchBooks(nameFilm).then((data) => {\n      setSearchFilms(data.results);\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmitFilm}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          value={nameFilm}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Поиск</button>\n      </form>\n      <ul>\n        {searchFilms.map((film) => (\n          <li key={film.id}>\n            <Link to={`${url}/${film.id}`}>{film.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { fetchReviewsById } from \"../services/tmdb-api\";\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  console.log(reviews === true);\n\n  useEffect(() => {\n    fetchReviewsById(movieId).then((reviews) => setReviews(reviews.results));\n  }, [movieId]);\n\n  //   console.log(actors);\n  return (\n    <ul>\n      {!reviews && (\n        <li>\n          <p>We don't have any rewiews for this movie</p>\n        </li>\n      )}\n      {reviews.map((review) => (\n        <li key={review.id}>\n          <h5>{review.author}</h5>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { fetchActorsById } from \"../services/tmdb-api\";\n\nexport default function Cast({ movieId }) {\n  const [actors, setActors] = useState([]);\n\n  console.log(actors);\n\n  useEffect(() => {\n    fetchActorsById(movieId).then((actors) => setActors(actors.cast));\n  }, [movieId]);\n\n  const renderImage = (actor) => {\n    if (actor.profile_path) {\n      return `https://image.tmdb.org/t/p/w500/${actor.profile_path}`;\n    } else {\n      return \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png\";\n    }\n  };\n\n  //   console.log(actors);\n  return (\n    <ul>\n      {actors.map((actor) => (\n        <li key={actor.id}>\n          <img\n            src={renderImage(actor)}\n            alt={actor.name}\n            width=\"200\"\n            height=\"250\"\n          />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { Route, Switch, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieById } from \"../services/tmdb-api\";\nimport { getYear, parseISO } from \"date-fns\";\nimport { Notify, Block } from \"notiflix\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport Reviews from \"./Reviews\";\nimport Cast from \"./Cast\";\nimport css from \"../styles/MovieDetailsPage.module.css\";\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  let { movieId } = useParams();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    Block.circle(\"body\", \"Loading...\", { cssAnimationDuration: 1000 });\n    fetchMovieById(movieId)\n      .then((data) => {\n        setMovie(data);\n        setGenres(data.genres);\n      })\n      .catch((error) => Notify.failure(error))\n      .finally(() => Block.remove(\"body\"));\n  }, [movieId]);\n\n  const renderImage = () => {\n    if (movie.poster_path) {\n      return `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    } else {\n      return \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png\";\n    }\n  };\n\n  // console.log(movie.release_date);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <div className={css.wrapperMovie}>\n            <div className={css.imageMovie}>\n              <img src={renderImage()} alt={movie.title} />\n            </div>\n            <div>\n              <h1>\n                {movie.title}\n                {movie.release_date &&\n                  `(${getYear(parseISO(movie.release_date))})`}\n              </h1>\n              <p>User Popularity: {Math.round(movie.popularity)}</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map((genre) => `${genre.name} `)}</p>\n            </div>\n          </div>\n          <div>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to={`${url}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`${url}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n            <div>\n              <Switch>\n                <Route path={`${url}/cast`}>\n                  <Cast movieId={movieId}></Cast>\n                </Route>\n                <Route path={`${url}/reviews`}>\n                  <Reviews movieId={movieId}></Reviews>\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import { Switch, Route } from \"react-router\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport HomePage from \"./views/HomePage\";\nimport MoviesPage from \"./views/MoviesPage\";\nimport MovieDetailsPage from \"./views/MovieDetailsPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/movies\" exact>\n          <MoviesPage />\n        </Route>\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}