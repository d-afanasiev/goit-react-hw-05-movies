{"version":3,"sources":["components/Navigation/Navigation.module.css","styles/MovieDetailsPage.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/AppBar/AppBar.jsx","services/tmdb-api.js","views/HomePage.jsx","views/MoviesPage.jsx","views/Reviews.jsx","views/Cast.jsx","views/MovieDetailsPage.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","css","container","Navigation","exact","to","link","activeClassName","activeLink","AppBar","header","API_KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","HomePage","useState","movies","setMovies","useEffect","then","data","results","catch","error","Notify","failure","map","movie","id","title","MoviesPage","searchFilms","setSearchFilms","nameFilm","setNameFilm","status","setStatus","useRouteMatch","console","log","onSubmit","e","preventDefault","searchBooks","finally","type","autoComplete","autoFocus","placeholder","value","onChange","target","color","height","width","timeout","film","Reviews","movieId","reviews","setReviews","fetchReviewsById","length","review","author","content","Cast","actors","setActors","fetchActorsById","cast","renderImage","actor","profile_path","src","alt","name","character","MovieDetailsPage","setMovie","genres","setGenres","useParams","fetchMovieById","wrapperMovie","imageMovie","poster_path","release_date","getYear","parseISO","Math","round","popularity","overview","genre","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5f75a50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2M60J\",\"activeLink\":\"Navigation_activeLink__1Kx0- Navigation_link__2M60J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperMovie\":\"MovieDetailsPage_wrapperMovie__2fXkH\",\"imageMovie\":\"MovieDetailsPage_imageMovie__3AN29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3sh3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3Ovz1\"};","import css from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={css.container}>{children}</div>;\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport css from \"./Navigation.module.css\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={css.link}\r\n        activeClassName={css.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/movies\"\r\n        className={css.link}\r\n        activeClassName={css.activeLink}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import Navigation from \"../Navigation/Navigation\";\r\nimport css from \"./AppBar.module.css\";\r\n\r\nexport default function AppBar() {\r\n  return (\r\n    <header className={css.header}>\r\n      <Navigation />\r\n    </header>\r\n  );\r\n}\r\n","const API_KEY = \"4e286c2ceeb7113ef3a7d57d0bdb7157\";\r\nconst BASE_URL = `https://api.themoviedb.org/3`;\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function searchBooks(nameFilm) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${nameFilm}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchActorsById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchReviewsById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchMovies } from \"../services/tmdb-api\";\r\nimport { Notify } from \"notiflix\";\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMovies()\r\n      .then((data) => {\r\n        setMovies(data.results);\r\n      })\r\n      .catch((error) => Notify.failure(error));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Trending today</h1>\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { searchBooks } from \"../services/tmdb-api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function MoviesPage() {\r\n  const [searchFilms, setSearchFilms] = useState([]);\r\n  const [nameFilm, setNameFilm] = useState(\"\");\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  console.log(url);\r\n\r\n  const handleChange = (e) => {\r\n    setNameFilm(e.target.value);\r\n  };\r\n\r\n  const handleSubmitFilm = (e) => {\r\n    e.preventDefault();\r\n\r\n    setStatus(\"pending\");\r\n\r\n    searchBooks(nameFilm)\r\n      .then((data) => {\r\n        setSearchFilms(data.results);\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setStatus(\"resolved\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmitFilm}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search films\"\r\n          value={nameFilm}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Поиск</button>\r\n      </form>\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"rgb(56, 56, 56)\"\r\n          height={100}\r\n          width={100}\r\n          timeout={1000} //3 secs\r\n        />\r\n      )}\r\n      {status === \"resolved\" && (\r\n        <ul>\r\n          {searchFilms.map((film) => (\r\n            <li key={film.id}>\r\n              <Link to={`${url}/${film.id}`}>{film.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { fetchReviewsById } from \"../services/tmdb-api\";\r\n\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  console.log(reviews);\r\n\r\n  useEffect(() => {\r\n    setStatus(\"pending\");\r\n    fetchReviewsById(movieId)\r\n      .then((reviews) => setReviews(reviews.results))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setStatus(\"resolved\"));\r\n  }, [movieId]);\r\n\r\n  //   console.log(actors);\r\n  return (\r\n    <>\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"rgb(56, 56, 56)\"\r\n          height={100}\r\n          width={100}\r\n          timeout={1000} //3 secs\r\n        />\r\n      )}\r\n      {status === \"resolved\" && reviews.length === 0 ? (\r\n        <p>We don't have any rewiews for this movie</p>\r\n      ) : (\r\n        <ul>\r\n          {reviews.map((review) => (\r\n            <li key={review.id}>\r\n              <h5>{review.author}</h5>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchActorsById } from \"../services/tmdb-api\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Cast({ movieId }) {\r\n  const [actors, setActors] = useState([]);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  console.log(actors);\r\n\r\n  useEffect(() => {\r\n    setStatus(\"pending\");\r\n    fetchActorsById(movieId)\r\n      .then((actors) => setActors(actors.cast))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setStatus(\"resolved\"));\r\n  }, [movieId]);\r\n\r\n  const renderImage = (actor) => {\r\n    if (actor.profile_path) {\r\n      return `https://image.tmdb.org/t/p/w500/${actor.profile_path}`;\r\n    } else {\r\n      return \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png\";\r\n    }\r\n  };\r\n\r\n  //   console.log(actors);\r\n  return (\r\n    <>\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"rgb(56, 56, 56)\"\r\n          height={100}\r\n          width={100}\r\n          timeout={1000} //3 secs\r\n        />\r\n      )}\r\n      {status === \"resolved\" && (\r\n        <ul>\r\n          {actors.map((actor) => (\r\n            <li key={actor.id}>\r\n              <img\r\n                src={renderImage(actor)}\r\n                alt={actor.name}\r\n                width=\"200\"\r\n                height=\"250\"\r\n              />\r\n              <p>{actor.name}</p>\r\n              <p>Character: {actor.character}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Route, Switch, useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchMovieById } from \"../services/tmdb-api\";\r\nimport { getYear, parseISO } from \"date-fns\";\r\n// import { Notify, Block } from \"notiflix\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Reviews from \"./Reviews\";\r\nimport Cast from \"./Cast\";\r\nimport css from \"../styles/MovieDetailsPage.module.css\";\r\n\r\nexport default function MovieDetailsPage() {\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [genres, setGenres] = useState([]);\r\n  const [status, setStatus] = useState(\"idle\");\r\n  let { movieId } = useParams();\r\n  const { url } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    setStatus(\"pending\");\r\n    fetchMovieById(movieId)\r\n      .then((data) => {\r\n        setMovie(data);\r\n        setGenres(data.genres);\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setStatus(\"resolved\"));\r\n  }, [movieId]);\r\n\r\n  const renderImage = () => {\r\n    if (movie.poster_path) {\r\n      return `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\r\n    } else {\r\n      return \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png\";\r\n    }\r\n  };\r\n\r\n  // console.log(movie.release_date);\r\n\r\n  return (\r\n    <>\r\n      {status === \"pending\" && (\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"rgb(56, 56, 56)\"\r\n          height={100}\r\n          width={100}\r\n          timeout={1000} //3 secs\r\n        />\r\n      )}\r\n      {status === \"resolved\" && (\r\n        <>\r\n          <div className={css.wrapperMovie}>\r\n            <div className={css.imageMovie}>\r\n              <img src={renderImage()} alt={movie.title} />\r\n            </div>\r\n            <div>\r\n              <h1>\r\n                {movie.title}\r\n                {movie.release_date &&\r\n                  `(${getYear(parseISO(movie.release_date))})`}\r\n              </h1>\r\n              <p>User Popularity: {Math.round(movie.popularity)}</p>\r\n              <h2>Overview</h2>\r\n              <p>{movie.overview}</p>\r\n              <h3>Genres</h3>\r\n              <p>{genres.map((genre) => `${genre.name} `)}</p>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h4>Additional information</h4>\r\n            <ul>\r\n              <li>\r\n                <Link to={`${url}/cast`}>Cast</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`${url}/reviews`}>Reviews</Link>\r\n              </li>\r\n            </ul>\r\n            <div>\r\n              <Switch>\r\n                <Route path={`${url}/cast`}>\r\n                  <Cast movieId={movieId}></Cast>\r\n                </Route>\r\n                <Route path={`${url}/reviews`}>\r\n                  <Reviews movieId={movieId}></Reviews>\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport HomePage from \"./views/HomePage\";\nimport MoviesPage from \"./views/MoviesPage\";\nimport MovieDetailsPage from \"./views/MovieDetailsPage\";\nimport \"./App.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nfunction App() {\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/movies\" exact>\n          <MoviesPage />\n        </Route>\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}