{"version":3,"sources":["services/tmdb-api.js","styles/MovieDetailsPage.module.css","views/MovieDetailsPage.jsx"],"names":["API_KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","searchBooks","nameFilm","fetchMovieById","movieId","fetchActorsById","fetchReviewsById","module","exports","Reviews","lazy","Cast","MovieDetailsPage","useState","movie","setMovie","genres","setGenres","goBack","setGoBack","history","useHistory","location","useLocation","useParams","useRouteMatch","useEffect","state","from","then","data","catch","error","console","log","className","css","onClick","push","wrapperMovie","imageMovie","src","poster_path","alt","title","release_date","getYear","parseISO","Math","round","popularity","overview","map","genre","name","to","pathname","information","fallback","type","color","height","width","timeout","path"],"mappings":"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","file":"static/js/moviedetailspage-view.f7840ab1.chunk.js","sourcesContent":["const API_KEY = \"4e286c2ceeb7113ef3a7d57d0bdb7157\";\r\nconst BASE_URL = `https://api.themoviedb.org/3`;\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function searchBooks(nameFilm) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${nameFilm}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchActorsById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchReviewsById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperMovie\":\"MovieDetailsPage_wrapperMovie__2fXkH\",\"imageMovie\":\"MovieDetailsPage_imageMovie__3AN29\",\"information\":\"MovieDetailsPage_information__tKl6h\",\"goBack\":\"MovieDetailsPage_goBack__1rOT6\"};","import {\r\n  Route,\r\n  Switch,\r\n  useParams,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchMovieById } from \"../services/tmdb-api\";\r\nimport { getYear, parseISO } from \"date-fns\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n// import { Notify, Block } from \"notiflix\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport css from \"../styles/MovieDetailsPage.module.css\";\r\n\r\nconst Reviews = lazy(() =>\r\n  import(\"../components/Reviews/Reviews\" /* webpackChunkName: \"reviews-view\" */)\r\n);\r\nconst Cast = lazy(() =>\r\n  import(\"../components/Cast/Cast\" /* webpackChunkName: \"cast-view\" */)\r\n);\r\n\r\nexport default function MovieDetailsPage() {\r\n  const [movie, setMovie] = useState(null);\r\n  const [genres, setGenres] = useState([]);\r\n  const [goBack, setGoBack] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { movieId } = useParams();\r\n  const { url } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      setGoBack(location.state.from);\r\n    }\r\n\r\n    fetchMovieById(movieId)\r\n      .then((data) => {\r\n        setMovie(data);\r\n        setGenres(data.genres);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [location.state, movieId]);\r\n\r\n  const handleGoBack = () => {\r\n    history.push(location.state?.from ? location.state.from : \"/\");\r\n  };\r\n\r\n  const renderImage = () => {\r\n    if (movie.poster_path) {\r\n      return `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\r\n    } else {\r\n      return \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/488px-No-Image-Placeholder.svg.png\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <>\r\n          <button className={css.goBack} onClick={handleGoBack}>\r\n            ‚Üê Go back\r\n          </button>\r\n          <div className={css.wrapperMovie}>\r\n            <div className={css.imageMovie}>\r\n              <img src={renderImage()} alt={movie.title} />\r\n            </div>\r\n            <div>\r\n              <h1>\r\n                {movie.title}\r\n                {movie.release_date &&\r\n                  `(${getYear(parseISO(movie.release_date))})`}\r\n              </h1>\r\n              <p>User Popularity: {Math.round(movie.popularity)}</p>\r\n              <h2>Overview</h2>\r\n              <p>{movie.overview}</p>\r\n              <h3>Genres</h3>\r\n              <p>{genres.map((genre) => `${genre.name} `)}</p>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h4>Additional information</h4>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${url}/cast`,\r\n                    state: { from: `${goBack}` },\r\n                  }}\r\n                >\r\n                  Cast\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${url}/reviews`,\r\n                    state: { from: `${goBack}` },\r\n                  }}\r\n                >\r\n                  Reviews\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className={css.information}>\r\n              <Suspense\r\n                fallback={\r\n                  <Loader\r\n                    type=\"Circles\"\r\n                    color=\"rgb(56, 56, 56)\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={1000}\r\n                  />\r\n                }\r\n              >\r\n                <Switch>\r\n                  <Route path={`${url}/cast`}>\r\n                    <Cast movieId={movieId}></Cast>\r\n                  </Route>\r\n                  <Route path={`${url}/reviews`}>\r\n                    <Reviews movieId={movieId}></Reviews>\r\n                  </Route>\r\n                </Switch>\r\n              </Suspense>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}