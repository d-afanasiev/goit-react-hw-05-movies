{"version":3,"sources":["services/tmdb-api.js","styles/MoviesPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","views/MoviesPage.jsx"],"names":["API_KEY","BASE_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","searchBooks","nameFilm","fetchMovieById","movieId","fetchActorsById","fetchReviewsById","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesPage","useState","searchFilms","setSearchFilms","setNameFilm","history","useHistory","location","useLocation","useRouteMatch","sortOrder","URLSearchParams","search","get","useEffect","then","data","results","catch","error","console","log","onSubmit","e","preventDefault","Notify","warning","className","css","submitMovie","type","autoComplete","autoFocus","placeholder","onChange","map","film","to","pathname","id","state","from","title"],"mappings":"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","file":"static/js/moviespage-view.a44b206c.chunk.js","sourcesContent":["const API_KEY = \"4e286c2ceeb7113ef3a7d57d0bdb7157\";\r\nconst BASE_URL = `https://api.themoviedb.org/3`;\r\n\r\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error(\"Not found\"));\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function searchBooks(nameFilm) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${nameFilm}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchActorsById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function fetchReviewsById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitMovie\":\"MoviesPage_submitMovie__3WoAV\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState, useEffect } from \"react\";\r\nimport { searchBooks } from \"../services/tmdb-api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Notify } from \"notiflix\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router\";\r\nimport css from \"../styles/MoviesPage.module.css\";\r\n\r\nexport default function MoviesPage() {\r\n  const [searchFilms, setSearchFilms] = useState([]);\r\n  const [nameFilm, setNameFilm] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const handleChange = (e) => {\r\n    setNameFilm(e.target.value);\r\n  };\r\n\r\n  const sortOrder = new URLSearchParams(location.search).get(\"query\");\r\n\r\n  const handleSubmitFilm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nameFilm) {\r\n      Notify.warning(\"Input field is empty\");\r\n      return;\r\n    }\r\n\r\n    history.push({\r\n      ...location,\r\n      search: `query=${nameFilm}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!location.search) {\r\n      return;\r\n    }\r\n\r\n    searchBooks(sortOrder)\r\n      .then((data) => {\r\n        setSearchFilms(data.results);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [location.search, sortOrder]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmitFilm} className={css.submitMovie}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search films\"\r\n          value={nameFilm}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Поиск</button>\r\n      </form>\r\n      <ul>\r\n        {searchFilms.map((film) => (\r\n          <li key={film.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `${url}/${film.id}`,\r\n                state: { from: `${url}${history.location.search}` },\r\n              }}\r\n            >\r\n              {film.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}